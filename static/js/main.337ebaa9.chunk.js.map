{"version":3,"sources":["context/context.js","store/state.js","services/storage.js","api/people.js","api/post.js","api/index.js","screens/home/Blogers/Blogers.jsx","screens/home/Post/Posts.jsx","screens/home/Home.jsx","screens/Login/Login.jsx","screens/nav/nav.jsx","screens/Registration/Registration.jsx","screens/WorkSpace/items.jsx","screens/WorkSpace/Modal.jsx","screens/WorkSpace/header.jsx","screens/WorkSpace/WorkSpace.jsx","screens/Footer/Footer.jsx","reducer/reducer.js","screens/Login/logout.jsx","App.js","serviceWorker.js","index.js"],"names":["context","React","createContext","blogers","posts","author","id","description","title","loginData","password","email","registrationData","lastname","username","name","newPost","loading","modalShow","Storage","key","data","value","JSON","stringify","localStorage","setItem","err","Error","message","response","getItem","parse","removeItem","People","fetch","then","json","method","body","headers","Post","api","this","people","post","getPeople","getPost","login","registration","byId","getPostById","logOut","remove","memo","useContext","state","dispatch","useEffect","type","payload","className","Spinner","animation","variant","map","item","src","avatar","alt","props","hendleFormChange","event","target","Form","Group","controlId","Label","Control","placeholder","onChange","Check","label","Button","onClick","status","alert","info","token","userId","set","history","push","catch","error","console","log","Nav","fill","Item","Link","href","Items","itemId","ModalWindow","show","handleClose","personId","Modal","onHide","Header","closeButton","Title","Body","as","rows","Footer","handleShow","user","get","reducer","action","LogOut","App","initialState","useReducer","Provider","path","render","routeprops","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","unregister"],"mappings":"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","file":"static/js/main.337ebaa9.chunk.js","sourcesContent":["import React from 'react';\r\nimport {state} from '../store/state.js';\r\n\r\nconst context = React.createContext(state)\r\n\r\nexport default context;","export const state = {\r\n    blogers: [],\r\n\r\n    posts: [{\r\n        author : '',\r\n        id : '',\r\n        description : '',\r\n        title : \"\"\r\n\r\n    }],\r\n\r\n    loginData: {\r\n        password: '',\r\n        email: ''\r\n    },\r\n\r\n    registrationData: {\r\n        lastname: '',\r\n        username: '',\r\n        password: \"\",\r\n        email: ''\r\n    },\r\n\r\n    name: '',\r\n\r\n    newPost: {\r\n        description: '',\r\n        title: '',\r\n    },\r\n\r\n    loading: true,\r\n\r\n    modalShow: false,\r\n\r\n    id : \"\"\r\n}"," export default class Storage {\r\n    static set(key, data) {\r\n        try {\r\n            const value = JSON.stringify(data);\r\n            localStorage.setItem(key, value);\r\n        } catch (err) {\r\n            throw new Error(err.message);\r\n        }\r\n    }\r\n\r\n    static get(key) {\r\n        try {\r\n            const response = localStorage.getItem(key);\r\n            const data = JSON.parse(response) || null;\r\n            return data;\r\n        } catch (err) {\r\n            throw new Error(err.message);\r\n        }\r\n    }\r\n\r\n    static remove(key) {\r\n        try {\r\n            localStorage.removeItem(key);\r\n        } catch (err) {\r\n            throw new Error(err.message);\r\n        }\r\n    }\r\n}\r\n\r\n\r\n//export const id = Storage.get('user').id;\r\n\r\n","import Storage from '../services/storage';\r\n\r\nclass People {\r\n    \r\n    getPeople(){\r\n        return fetch('https://5d8e0901370f02001405c7c9.mockapi.io/api/v1/postblog/users')\r\n        .then(response => response.json())\r\n    }\r\n\r\n    login(data){\r\n      return fetch( \r\n            'https://it-blog-posts.herokuapp.com/api/people/login',\r\n            {\r\n              method: \"POST\", \r\n              body: JSON.stringify(data), \r\n              headers: {\r\n                'Content-Type': 'application/json' \r\n              }\r\n            }\r\n          )\r\n    }\r\n\r\n    registration(data){\r\n      return   fetch( \r\n        'https://it-blog-posts.herokuapp.com/api/people',\r\n        {\r\n          method: \"POST\", \r\n          body: JSON.stringify(data), \r\n          headers: {\r\n            'Content-Type': 'application/json' \r\n          }\r\n        }\r\n      )\r\n    }\r\n\r\n    byId(id){\r\n      return  fetch(`https://it-blog-posts.herokuapp.com/api/people/${id}`)\r\n      .then(data=>data.json())\r\n    }\r\n\r\n    logOut(data){\r\n      return fetch(`\"https://it-blog-posts.herokuapp.com/api/people/logout?access_token=${data}`,\r\n      {\r\n        method: \"POST\", \r\n        headers: {\r\n          'Content-Type': 'application/json' \r\n        }\r\n      }\r\n      )\r\n      //.then(response => console.log(response))\r\n      \r\n    }\r\n}\r\n\r\n\r\nexport default People;\r\n\r\n\r\n\r\n","class Post {\r\n\r\n    getPost() {\r\n        return fetch(`https://it-blog-posts.herokuapp.com/api/posts`)\r\n            .then(response => response.json())\r\n    }\r\n\r\n    post(data) {\r\n        return fetch(\r\n            'https://it-blog-posts.herokuapp.com/api/posts', {\r\n                method: \"POST\",\r\n                body: JSON.stringify(data),\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            }\r\n        )}\r\n\r\n        getPostById(id) {\r\n            return fetch(`https://it-blog-posts.herokuapp.com/api/people/${id}/posts`)\r\n                .then(response => response.json())  \r\n        }\r\n      \r\n        remove(id){\r\n            return fetch(`https://it-blog-posts.herokuapp.com/api/posts/${id}`,{\r\n                method: \"DELETE\",\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            }\r\n            )\r\n        }\r\n}\r\n\r\nexport default Post;","import People from \"./people\";\r\nimport Post from \"./post\";\r\n\r\n\r\n\r\n\r\nclass Api {\r\n    constructor() {\r\n      this.people = new People();\r\n      this.post = new Post();\r\n    }\r\n  }\r\n\r\n         const api = new Api();\r\n  export const getPeople = api.people.getPeople;\r\n  export const getPost = api.post.getPost;\r\n  export const login = api.people.login;\r\n  export const registration  = api.people.registration;\r\n  export const byId = api.people.byId;\r\n  export const post = api.post.post;\r\n  export const getPostById = api.post.getPostById;\r\n  export const logOut = api.people.logOut;\r\n  export const remove = api.post.remove;\r\n\r\n  \r\n\r\n","import React, {  useEffect,useContext } from 'react';\r\nimport context from '../../../context/context'\r\nimport './blogers.css';\r\nimport { Spinner } from 'react-bootstrap';\r\nimport { getPeople } from '../../../api/index'\r\n\r\n\r\n\r\nconst Blogers = () => {\r\n    const {state,dispatch} = useContext(context)\r\n    const {blogers,loading} = state;\r\n    useEffect(() => {\r\n        getPeople().then(function (data) {\r\n            dispatch({type : \"Fetch_Blogers\" , payload : data})\r\n            dispatch({type : \"Spinner\"})\r\n        });\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"blogers\" >\r\n            <h2>Blogers</h2>\r\n            {loading && <Spinner animation=\"grow\" variant=\"danger\" className=\"spiner\" />}\r\n            {blogers.map((item) => {\r\n                return <div className='item-bloger' key={item.id}>\r\n                    <img src={item.avatar} alt=\"\" className=\"phot\" />\r\n                    <p> {item.name}</p>\r\n                </div>\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default React.memo(Blogers);;","import React,{ useEffect,useContext} from 'react';\r\nimport context from '../../../context/context'\r\nimport {getPost} from '../../../api/index';\r\nimport {Spinner} from 'react-bootstrap';\r\nimport './post.css'\r\n\r\n\r\n\r\nconst Posts = () => {\r\n    const {state,dispatch} = useContext(context)\r\n    const {posts,loading} = state;\r\n\r\n    useEffect(()=>{\r\n        getPost().then(function (data) { \r\n            dispatch({type : \"Fetch_Posts\" , payload : data})\r\n            dispatch({type : \"Spinner\"})\r\n      });\r\n  },[])\r\n  \r\n    return(\r\n\r\n       <div className=\"contentpost\">\r\n            {loading  &&  <Spinner animation=\"grow\" variant=\"danger\" className=\"spiner\"/> }\r\n        {\r\n            posts.map((item)=>{\r\n             return   <div className='item' key={item.id}>\r\n                <div className='title'> <p>{item.author}</p>  <p>{item.title}</p>   </div>\r\n                <div className='discription'> {item.description}</div>\r\n                </div>\r\n            })\r\n        }\r\n       </div> \r\n    )\r\n}\r\n\r\n\r\nexport default React.memo(Posts);","import React from 'react';\r\nimport Blogers from \"./Blogers/Blogers\";\r\nimport Post from './Post/Posts';\r\nimport './Home.css'\r\n\r\nconst Home = () => {\r\n\r\n    return (\r\n        <div className=\"mainhome\">\r\n            <Blogers />\r\n            <Post />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default React.memo(Home);","import React, { useContext } from 'react';\r\nimport context from '../../context/context'\r\nimport { Button, Form } from 'react-bootstrap';\r\nimport { login } from '../../api/index';\r\nimport Storage from '../../services/storage';\r\n\r\n\r\nimport './login.css'\r\n\r\n\r\nconst Login = (props) => {\r\n  const {state,dispatch} = useContext(context)\r\n    const {loginData} = state;\r\n\r\n  const onSubmitForm = () => {\r\n    login(loginData)\r\n      .then(response => {\r\n        if (response.status !== 200) {\r\n          return alert(\"Unable to log in\")\r\n        }\r\n       return response.json()\r\n      })\r\n      .then(data => {\r\n        const info = ({ token: data.id, id: data.userId })\r\n        Storage.set('user', info)\r\n          dispatch({ type: 'ID', payload: data.id  })\r\n          props.history.push('/home')\r\n        }\r\n        )\r\n        .catch(error => {\r\n        console.log(error)\r\n      })\r\n  }\r\n\r\n  const hendleFormChange = (event) => {\r\n    const { target: { name, value } } = event;\r\n    dispatch({type : 'Login' , payload : {...loginData,[name] : value}})\r\n  }\r\n\r\n  return (\r\n    <div className=\"logForm\">\r\n      <Form.Group controlId=\"formBasicEmail\">\r\n        <Form.Label>Email address</Form.Label>\r\n        <Form.Control name=\"email\" type=\"email\" placeholder=\"Enter email\" onChange={hendleFormChange} value={state.email} />\r\n      </Form.Group>\r\n\r\n      <Form.Group controlId=\"formBasicPassword\">\r\n        <Form.Label>Password</Form.Label>\r\n        <Form.Control name=\"password\" type=\"password\" placeholder=\"Password\" onChange={hendleFormChange} value={state.password} />\r\n      </Form.Group>\r\n\r\n      <Form.Group controlId=\"formBasicCheckbox\">\r\n        <Form.Check type=\"checkbox\" label=\"Remember me\" />\r\n      </Form.Group>\r\n      <Button variant=\"primary\" onClick={onSubmitForm}>Log In</Button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default React.memo(Login);;\r\n\r\n\r\n","import React,{useContext,useEffect} from 'react';\r\nimport './nav.css';\r\nimport { Nav } from 'react-bootstrap';\r\nimport context from '../../context/context';\r\nimport {Link} from 'react-router-dom'\r\n\r\n\r\n\r\nconst Navigate = () => {\r\n    const {state} = useContext(context)\r\n  \r\n\r\n    return (\r\n        <Nav fill variant=\"tabs\"  >\r\n            <Nav.Item>\r\n                <Nav.Link href=\"#/home\" >Home</Nav.Link>\r\n            </Nav.Item>\r\n            {!state.id ? <Nav.Item>\r\n                <Nav.Link href=\"#/login\"> Log In</Nav.Link>\r\n            </Nav.Item> : \r\n             <Nav.Item>\r\n                <Nav.Link href=\"#/logout\"> Log Out</Nav.Link>\r\n            </Nav.Item> }\r\n            <Nav.Item>\r\n                <Nav.Link href=\"#/registration\" >Registration</Nav.Link>\r\n            </Nav.Item>\r\n            <Nav.Item>\r\n                <Nav.Link href=\"#/workspace\" >Post</Nav.Link>\r\n            </Nav.Item>\r\n        </Nav>\r\n\r\n    )\r\n}\r\n\r\nexport default React.memo(Navigate);","import React, {  useContext } from \"react\";\r\nimport context from '../../context/context'\r\nimport { registration } from '../../api/index';\r\nimport { Button, Form } from 'react-bootstrap';\r\nimport './registration.css';\r\n\r\n\r\nconst Registration = (props) => {\r\n  const { state, dispatch } = useContext(context)\r\n  const { registrationData } = state;\r\n  const { lastname, username, password, email } = registrationData;\r\n\r\n  const onSubmitForm = () => {\r\n    registration(registrationData)\r\n      .then(response => {\r\n        if (response.status === 200) {\r\n          props.history.push('/login')\r\n          return response.json()\r\n        }\r\n      });\r\n\r\n  }\r\n\r\n  const hendleFormChange = (event) => {\r\n    const { target: { name, value } } = event;\r\n    dispatch({ type: 'Registration', payload: { ...registrationData, [name]: value } })\r\n  }\r\n\r\n  return (\r\n    <div className=\"logForm\">\r\n      <Form.Group controlId=\"formBasicLastName\">\r\n        <Form.Label>Last Name</Form.Label>\r\n        <Form.Control name=\"lastname\" type=\"email\" placeholder=\"Last Name\" onChange={hendleFormChange} value={lastname} />\r\n      </Form.Group>\r\n\r\n      <Form.Group controlId=\"formBasicUserName\">\r\n        <Form.Label>User Name</Form.Label>\r\n        <Form.Control name=\"username\" type=\"email\" placeholder=\"User Name\" onChange={hendleFormChange} value={username} />\r\n      </Form.Group>\r\n\r\n      <Form.Group controlId=\"formBasicEmail\">\r\n        <Form.Label>Email address</Form.Label>\r\n        <Form.Control name=\"email\" type=\"email\" placeholder=\"Enter email\" onChange={hendleFormChange} value={email} />\r\n      </Form.Group>\r\n\r\n      <Form.Group controlId=\"formBasicPassword\">\r\n        <Form.Label>Password</Form.Label>\r\n        <Form.Control name=\"password\" type=\"password\" placeholder=\"Password\" onChange={hendleFormChange} value={password} />\r\n      </Form.Group>\r\n\r\n      <Button variant=\"primary\" onClick={onSubmitForm}>Ok</Button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default React.memo(Registration);;","import React, { useEffect, useContext } from 'react';\r\nimport context from '../../context/context'\r\nimport { getPostById, getPost,remove } from '../../api/index';\r\nimport { Spinner,Button } from 'react-bootstrap';\r\n\r\n\r\n\r\nconst Items = () => {\r\n    const { state, dispatch } = useContext(context)\r\n    const { posts, loading, id } = state;\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (id) {\r\n            getPostById(id).then(function (data) {\r\n                dispatch({ type: \"Fetch_Posts\", payload: data })\r\n                dispatch({ type: \"Spinner\" })\r\n            });\r\n        } else {\r\n            getPost().then(function (data) {\r\n                dispatch({ type: \"Fetch_Posts\", payload: data })\r\n                dispatch({ type: \"Spinner\" })\r\n            });\r\n        }\r\n    }, [posts,id])\r\n\r\n    const removePost = (itemId)=>{\r\n        remove(itemId)\r\n        }\r\n    \r\n    return (\r\n        <div className=\"content\">\r\n            {loading && <Spinner animation=\"grow\" variant=\"danger\" className=\"spiner\" />}\r\n            {\r\n                posts.map((item) => {\r\n                    return <div className='item' key={item.id}>\r\n                        <div className='title'> <p>{item.author}</p>  <p>{item.title}</p>{id && <Button  onClick={()=> removePost(item.id)}  className='remove'> &times;</Button>}  </div>\r\n                        <div className='discription'> {item.description}</div>\r\n                    </div>\r\n                })\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Items;","import React, { useContext } from 'react';\r\nimport context from '../../context/context'\r\nimport { post } from '../../api/index';\r\nimport { Button, Modal, Form } from 'react-bootstrap';\r\n\r\nconst ModalWindow = ({ show, handleClose, name }) => {\r\n    const { state, dispatch } = useContext(context)\r\n    const { newPost, id } = state;\r\n    const { description, title, } = newPost;\r\n    newPost.author = name;\r\n    newPost.personId = id;\r\n\r\n    const onSubmitForm = () => {\r\n        post(newPost)\r\n    }\r\n\r\n    const hendleFormChange = (event) => {\r\n        const { target: { name, value } } = event;\r\n        dispatch({ type: 'New_Post', payload: { ...newPost, [name]: value } })\r\n        \r\n    }\r\n    return (\r\n        <Modal show={show} onHide={handleClose}>\r\n\r\n            <Modal.Header closeButton>\r\n                <Modal.Title>Create New Post</Modal.Title>\r\n            </Modal.Header>\r\n\r\n            <Modal.Body>\r\n                <Form.Group controlId=\"formBasicTitle\">\r\n                    <Form.Control name=\"title\" type=\"email\" placeholder=\"Title\" onChange={hendleFormChange} value={title} />\r\n                </Form.Group>\r\n                <Form.Group controlId=\"formBasic.ControlTextarea\">\r\n                    <Form.Control name=\"description\" as=\"textarea\" rows=\"3\" placeholder=\"Description\" onChange={hendleFormChange} value={description} />\r\n                </Form.Group>\r\n            </Modal.Body>\r\n\r\n            <Modal.Footer>\r\n                <Button variant=\"secondary\" onClick={handleClose}>\r\n                    Close\r\n        </Button>\r\n\r\n                <Button variant=\"primary\" onClick={() => { handleClose(); onSubmitForm() }}>\r\n                    Save\r\n            </Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default ModalWindow;","import React from 'react';\r\nimport { Button } from 'react-bootstrap';\r\n\r\nconst Header = ({handleShow, name, id}) => {\r\n    return(\r\n        <div className=\"main-header\">\r\n\r\n        <div className=\"info\">\r\n            <div className=\"photo\">\r\n                <img src=\"\" alt=\"\" />\r\n            </div>\r\n        <p className=\"name\">{name ? name : \"workspace\"}</p>\r\n        </div>\r\n\r\n        <Button variant=\"dark\" onClick={()=>{id ? handleShow() : alert(\"Not Logined\")}}>\r\n            New Post\r\n    </Button>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default React.memo(Header);","import React, {  useEffect,useContext } from 'react';\r\nimport context from '../../context/context'\r\nimport './workspace.css'\r\nimport Items from './items';\r\nimport ModalWindow from './Modal';\r\nimport Header from './header'\r\nimport { byId } from '../../api';\r\nimport Storage from '../../services/storage'\r\n\r\n\r\nconst WorkSpace = () => {\r\n    const { state, dispatch } = useContext(context)\r\n    const {name, modalShow,id} = state;\r\n\r\n    const handleShow = () =>{dispatch({type : \"Modal_Show\"})};\r\n    const handleClose =() =>{dispatch({type : \"Modal_Hide\"})}\r\n\r\n    useEffect(() => {\r\n        const user = Storage.get('user');\r\n        if (user) {\r\n            byId(user.id).then(data => {\r\n                dispatch({ type: 'GetName', payload: `${data.lastname} ${data.username}`  })\r\n            })\r\n        } else {\r\n            return\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"main\">\r\n            <Header handleShow={handleShow} name={name} id={id}/>\r\n            <ModalWindow show={modalShow} handleClose={handleClose} name={name} id={id} />\r\n            <Items />\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default React.memo(WorkSpace);","import React from 'react';\r\nimport './footer.css'\r\n\r\nconst Footer = () => {\r\n    return (\r\n    <div className=\"footer\">\r\n    <p>Armenian Code Academy</p>\r\n    </div>\r\n    )\r\n} \r\n\r\nexport default Footer;","const reducer = (state, action) => {\r\n    switch (action.type) {\r\n        case \"Fetch_Blogers\":\r\n            return {\r\n                ...state,\r\n                blogers: action.payload\r\n            }\r\n            case \"Fetch_Posts\":\r\n                return {\r\n                    ...state,\r\n                    posts: action.payload\r\n                }\r\n                case \"Login\":\r\n                    return {\r\n                        ...state,\r\n                        loginData: action.payload\r\n                    }\r\n                    case \"Registration\":\r\n                        return {\r\n                            ...state,\r\n                            registrationData: action.payload\r\n                        }\r\n                        case \"GetName\":\r\n                            return {\r\n                                ...state,\r\n                                name: action.payload\r\n                            }\r\n                            case \"New_Post\":\r\n                                return {\r\n                                    ...state,\r\n                                    newPost: action.payload\r\n                                }\r\n                                case \"Spinner\" :\r\n                                    return{\r\n                                        ...state,\r\n                                        loading : false,\r\n                                    }\r\n                                    case \"Modal_Show\" :\r\n                                    return{\r\n                                        ...state,\r\n                                        modalShow : true,\r\n                                    }\r\n                                    case \"Modal_Hide\" :\r\n                                            return{\r\n                                                ...state,\r\n                                                modalShow : false,\r\n                                            }\r\n                                case \"ID\" :\r\n                                    return{\r\n                                        ...state,\r\n                                        id : action.payload\r\n                                    }\r\n                                    case \"LOGOUT\" :\r\n                                        return{\r\n                                            ...state,\r\n                                            id : ''\r\n                                        }\r\n                                default:\r\n                                    return state;\r\n    }\r\n}\r\n\r\nexport default reducer;","import React, { useContext } from 'react';\r\nimport Storage from '../../services/storage';\r\nimport context from '../../context/context'\r\nimport { logOut } from '../../api/index'\r\nimport { Button } from 'react-bootstrap'\r\n\r\nconst LogOut = (props) => {\r\n    const { state, dispatch } = useContext(context)\r\n\r\n    const userLogOut = () => {\r\n        const token = Storage.get('user').token\r\n        logOut(token).then(() => {\r\n            Storage.remove('user');\r\n            dispatch({ type: 'LOGOUT' })\r\n            props.history.push('/home')\r\n        })\r\n    }\r\n\r\n    const cancelLogin = ()=>{\r\n        props.history.push('/home')\r\n    }\r\n    return (\r\n        <div className=\"logout\">\r\n            <div>Are You Shure</div>\r\n            <div className=\"btnloguot\">\r\n                <Button variant=\"dark\" onClick={cancelLogin}>Cancel</Button>\r\n                <Button variant=\"danger\" className=\"btnloguot\" onClick={userLogOut}>ok</Button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LogOut;","import React, {useContext, useReducer,useEffect} from 'react';\r\nimport Home from './screens/home/Home';\r\nimport Login from './screens/Login/Login';\r\nimport Navigate from './screens/nav/nav';\r\nimport Registration from './screens/Registration/Registration';\r\nimport WorkSpace from './screens/WorkSpace/WorkSpace';\r\nimport Footer from './screens/Footer/Footer';\r\nimport {BrowserRouter, Route, HashRouter } from 'react-router-dom';\r\nimport context from './context/context';\r\nimport reducer from './reducer/reducer';\r\nimport Storage from './services/storage'\r\nimport './App.css';\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport LogOut from './screens/Login/logout';\r\n\r\n\r\n\r\nfunction App() {\r\n  const initialState = useContext(context);\r\n  const [state, dispatch] = useReducer(reducer, initialState)\r\n  useEffect(() => {\r\n            const user = Storage.get('user');\r\n            if(user){\r\n              dispatch({ type: 'ID', payload: user.id  })\r\n            }\r\n        }\r\n  , [])\r\n  return (\r\n  <HashRouter>\r\n    <context.Provider value={{state,dispatch}}>\r\n    <div className=\"App\">\r\n      <Navigate id={state.id} />\r\n      <Route  path='/home'  render={()=> <Home/>}/>;\r\n      <Route  path='/login'  render={(routeprops)=> <Login  {...routeprops}/>}/>\r\n      <Route  path='/logout'  render={(routeprops)=> <LogOut  {...routeprops}/>}/>\r\n      <Route  path='/registration'  render={(routeprops)=> <Registration {...routeprops}/>}/>\r\n      <Route  path='/workspace'  render={()=> <WorkSpace/>}/>\r\n      <Route  path='/home'  render={()=> <Footer/>}/>\r\n    </div>\r\n    </context.Provider>\r\n  </HashRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css'\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\nserviceWorker.unregister();\r\n\r\n"],"sourceRoot":""}